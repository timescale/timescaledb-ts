// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Candlestick Aggregation should generate basic candlestick query 1`] = `
"SELECT
  time_bucket($1::interval, "timestamp") as bucket_time,
  open(candlestick_agg("timestamp", "price")) as open,
  high(candlestick_agg("timestamp", "price")) as high,
  low(candlestick_agg("timestamp", "price")) as low,
  close(candlestick_agg("timestamp", "price")) as close,
  open_time(candlestick_agg("timestamp", "price")) as open_time,
  high_time(candlestick_agg("timestamp", "price")) as high_time,
  low_time(candlestick_agg("timestamp", "price")) as low_time,
  close_time(candlestick_agg("timestamp", "price")) as close_time
FROM "stock_prices"
WHERE "timestamp" >= $2 AND "timestamp" <= $3
GROUP BY bucket_time
ORDER BY bucket_time ASC;"
`;

exports[`Candlestick Aggregation should properly escape identifiers 1`] = `
"SELECT
  time_bucket($1::interval, "time""stamp") as bucket_time,
  open(candlestick_agg("time""stamp", "price""value")) as open,
  high(candlestick_agg("time""stamp", "price""value")) as high,
  low(candlestick_agg("time""stamp", "price""value")) as low,
  close(candlestick_agg("time""stamp", "price""value")) as close,
  open_time(candlestick_agg("time""stamp", "price""value")) as open_time,
  high_time(candlestick_agg("time""stamp", "price""value")) as high_time,
  low_time(candlestick_agg("time""stamp", "price""value")) as low_time,
  close_time(candlestick_agg("time""stamp", "price""value")) as close_time
FROM "stock_prices"
WHERE "time""stamp" >= $2 AND "time""stamp" <= $3
GROUP BY bucket_time
ORDER BY bucket_time ASC;"
`;
