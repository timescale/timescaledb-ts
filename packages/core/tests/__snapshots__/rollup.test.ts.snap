// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RollupBuilder down() should generate drop statements 1`] = `
[
  "SELECT remove_continuous_aggregate_policy('daily_rollup', if_exists => true);",
  "DROP MATERIALIZED VIEW IF EXISTS "daily_rollup";",
]
`;

exports[`RollupBuilder down() should generate drop statements without refresh policy 1`] = `
[
  "DROP MATERIALIZED VIEW IF EXISTS "daily_rollup";",
]
`;

exports[`RollupBuilder down() should properly escape view names with special characters 1`] = `
[
  "SELECT remove_continuous_aggregate_policy('daily"rollup', if_exists => true);",
  "DROP MATERIALIZED VIEW IF EXISTS "daily""rollup";",
]
`;

exports[`RollupBuilder inspect() should generate basic inspect SQL 1`] = `
"
      SELECT 
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'hourly_metrics'
        ) as source_view_exists,
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'daily_rollup'
        ) as rollup_view_exists;
    "
`;

exports[`RollupBuilder inspect() should handle schema qualified names 1`] = `
"
      SELECT 
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'public.hourly_metrics'
        ) as source_view_exists,
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'public.daily_rollup'
        ) as rollup_view_exists;
    "
`;

exports[`RollupBuilder inspect() should properly escape view names with special characters 1`] = `
"
      SELECT 
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'hourly"metrics'
        ) as source_view_exists,
        EXISTS (
          SELECT FROM information_schema.views 
          WHERE table_schema = 'public' 
          AND table_name = 'daily"rollup'
        ) as rollup_view_exists;
    "
`;

exports[`RollupBuilder up() refresh policy should generate refresh policy SQL 1`] = `
"SELECT add_continuous_aggregate_policy('daily_rollup',
      start_offset => INTERVAL '30 days',
      end_offset => INTERVAL '1 day',
      schedule_interval => INTERVAL '1 day'
    );"
`;

exports[`RollupBuilder up() refresh policy should properly escape interval values 1`] = `
"SELECT add_continuous_aggregate_policy('daily_rollup',
      start_offset => INTERVAL '30 days''--injection',
      end_offset => INTERVAL '1 day',
      schedule_interval => INTERVAL '1 day'
    );"
`;

exports[`RollupBuilder up() should generate SQL with materialized-only option 1`] = `
"CREATE MATERIALIZED VIEW "daily_rollup"
      WITH (timescaledb.continuous) AS 
      SELECT
        time_bucket('1 day', "bucket") AS "bucket",
        rollup("percentile_hourly") as "percentile_daily"
      FROM "hourly_metrics"
      GROUP BY 1 WITH DATA;
    "
`;

exports[`RollupBuilder up() should generate SQL with multiple rollup rules 1`] = `
"CREATE MATERIALIZED VIEW "daily_rollup"
      WITH (timescaledb.continuous) AS 
      SELECT
        time_bucket('1 day', "bucket") AS "bucket",
        rollup("percentile_hourly") as "percentile_daily",
        mean(rollup("response_time")) as "mean_response_time"
      FROM "hourly_metrics"
      GROUP BY 1 WITH NO DATA;
    "
`;

exports[`RollupBuilder up() should generate basic rollup SQL 1`] = `
"CREATE MATERIALIZED VIEW "daily_rollup"
      WITH (timescaledb.continuous) AS 
      SELECT
        time_bucket('1 day', "bucket") AS "bucket",
        rollup("percentile_hourly") as "percentile_daily"
      FROM "hourly_metrics"
      GROUP BY 1 WITH NO DATA;
    "
`;

exports[`RollupBuilder up() should handle column names with special characters 1`] = `
"CREATE MATERIALIZED VIEW "daily_rollup"
      WITH (timescaledb.continuous) AS 
      SELECT
        time_bucket('1 day', "bucket") AS "bucket",
        rollup("percentile""hourly") as "percentile""daily"
      FROM "hourly_metrics"
      GROUP BY 1 WITH NO DATA;
    "
`;
